name: Snyk Security Scan

on:
  push:
    branches:
      - Infra
  workflow_dispatch:
      
  pull_request:
    branches:
      - none

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  snyk-security-scan:
    name: "Snyk Full Repo Security Scan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth $SNYK_TOKEN

      - name: Run Snyk Code Scan (SAST)
        run: |
          echo "üîç Running Snyk Code Security Scan..."
          snyk code test --severity-threshold=medium | tee snyk-code-results.txt || true

      - name: Run Snyk Open Source Dependency Scan (SCA)
        run: |
          echo "üîç Running Snyk Dependency Security Scan..."
          snyk test --all-projects --severity-threshold=medium | tee snyk-dependency-results.txt || true

      - name: Run Snyk Infrastructure as Code (IaC) Scan
        run: |
          echo "üîç Running Snyk IaC Security Scan..."
          snyk iac test --severity-threshold=medium | tee snyk-iac-results.txt || true

      - name: Run Snyk Container Scan (if Dockerfile exists)
        run: |
          if [ -f "Dockerfile" ]; then
            echo "üîç Running Snyk Container Security Scan..."
            snyk container test --file=Dockerfile --severity-threshold=medium | tee snyk-container-results.txt || true
          else
            echo "‚ö†Ô∏è No Dockerfile found, skipping container scan."
          fi

      - name: Compute Final Security Score
        run: |
          echo "üìä Calculating Security Score..."
          
          # Count vulnerabilities across all reports
          TOTAL_CRITICAL=$(grep -i "Critical" snyk-*.txt | wc -l)
          TOTAL_HIGH=$(grep -i "High" snyk-*.txt | wc -l)
          TOTAL_MEDIUM=$(grep -i "Medium" snyk-*.txt | wc -l)
          TOTAL_LOW=$(grep -i "Low" snyk-*.txt | wc -l)

          # Compute final score (Simple Formula: 100 - Weighted Vulnerabilities)
          SECURITY_SCORE=$((100 - (TOTAL_CRITICAL * 3) - (TOTAL_HIGH * 2) - (TOTAL_MEDIUM * 1) - (TOTAL_LOW * 0.5)))
          SECURITY_SCORE=$(( SECURITY_SCORE < 0 ? 0 : SECURITY_SCORE )) # Ensure it doesn't go below 0

          echo "------------------------------------"
          echo "üî¥ Critical: $TOTAL_CRITICAL"
          echo "üü† High: $TOTAL_HIGH"
          echo "üü° Medium: $TOTAL_MEDIUM"
          echo "üü¢ Low: $TOTAL_LOW"
          echo "üìä Final Security Score: $SECURITY_SCORE / 100"
          echo "------------------------------------"

          # Fail workflow if score is too low
          if [ "$SECURITY_SCORE" -lt 50 ]; then
            echo "‚ùå Security Score is too low! Failing the workflow."
          fi
